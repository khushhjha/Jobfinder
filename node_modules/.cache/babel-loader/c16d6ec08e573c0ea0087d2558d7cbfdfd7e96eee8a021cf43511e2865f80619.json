{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\Desktop\\\\Jobfinder\\\\src\\\\components\\\\SearchForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './SearchForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchForm = ({\n  setJobs,\n  setLoading,\n  setError\n}) => {\n  _s();\n  const [keyword, setKeyword] = useState('');\n  const [location, setLocation] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!keyword.trim()) {\n      setError('Please enter a job keyword');\n      return;\n    }\n    setLoading(true);\n    setError('');\n    setJobs([]);\n    try {\n      // Using Adzuna API (free tier)\n      const response = await axios.get('https://api.adzuna.com/v1/api/jobs/us/search/1', {\n        params: {\n          app_id: 'your_app_id',\n          // Replace with actual Adzuna app_id\n          app_key: 'your_app_key',\n          // Replace with actual Adzuna app_key\n          what: keyword,\n          where: location || 'US',\n          results_per_page: 20\n        }\n      });\n\n      // Mock data for demonstration (remove when using real API)\n      const mockJobs = [{\n        id: '1',\n        title: `${keyword} Developer`,\n        company: {\n          display_name: 'Tech Corp'\n        },\n        location: {\n          display_name: location || 'Remote'\n        },\n        description: `Exciting ${keyword} position with competitive salary and benefits.`,\n        redirect_url: '#',\n        salary_min: 60000,\n        salary_max: 90000\n      }, {\n        id: '2',\n        title: `Senior ${keyword} Engineer`,\n        company: {\n          display_name: 'Innovation Labs'\n        },\n        location: {\n          display_name: location || 'New York'\n        },\n        description: `Lead ${keyword} projects in a dynamic environment.`,\n        redirect_url: '#',\n        salary_min: 80000,\n        salary_max: 120000\n      }, {\n        id: '3',\n        title: `${keyword} Specialist`,\n        company: {\n          display_name: 'Global Solutions'\n        },\n        location: {\n          display_name: location || 'San Francisco'\n        },\n        description: `Join our team as a ${keyword} specialist with growth opportunities.`,\n        redirect_url: '#',\n        salary_min: 70000,\n        salary_max: 100000\n      }];\n      setJobs(mockJobs); // Use response.data.results for real API\n    } catch (error) {\n      setError('Failed to fetch jobs. Please try again.');\n      console.error('API Error:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"search-form\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Job title, keywords...\",\n        value: keyword,\n        onChange: e => setKeyword(e.target.value),\n        className: \"search-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"City, state...\",\n        value: location,\n        onChange: e => setLocation(e.target.value),\n        className: \"search-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"search-button\",\n      children: \"\\uD83D\\uDD0D Search Jobs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchForm, \"a+kqTlTk1hmNWID5/ZOArJG2Hq4=\");\n_c = SearchForm;\nexport default SearchForm;\nvar _c;\n$RefreshReg$(_c, \"SearchForm\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","SearchForm","setJobs","setLoading","setError","_s","keyword","setKeyword","location","setLocation","handleSubmit","e","preventDefault","trim","response","get","params","app_id","app_key","what","where","results_per_page","mockJobs","id","title","company","display_name","description","redirect_url","salary_min","salary_max","error","console","className","onSubmit","children","type","placeholder","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/lenovo/Desktop/Jobfinder/src/components/SearchForm.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport './SearchForm.css';\n\nconst SearchForm = ({ setJobs, setLoading, setError }) => {\n  const [keyword, setKeyword] = useState('');\n  const [location, setLocation] = useState('');\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    if (!keyword.trim()) {\n      setError('Please enter a job keyword');\n      return;\n    }\n\n    setLoading(true);\n    setError('');\n    setJobs([]);\n\n    try {\n      // Using Adzuna API (free tier)\n      const response = await axios.get('https://api.adzuna.com/v1/api/jobs/us/search/1', {\n        params: {\n          app_id: 'your_app_id', // Replace with actual Adzuna app_id\n          app_key: 'your_app_key', // Replace with actual Adzuna app_key\n          what: keyword,\n          where: location || 'US',\n          results_per_page: 20\n        }\n      });\n\n      // Mock data for demonstration (remove when using real API)\n      const mockJobs = [\n        {\n          id: '1',\n          title: `${keyword} Developer`,\n          company: { display_name: 'Tech Corp' },\n          location: { display_name: location || 'Remote' },\n          description: `Exciting ${keyword} position with competitive salary and benefits.`,\n          redirect_url: '#',\n          salary_min: 60000,\n          salary_max: 90000\n        },\n        {\n          id: '2',\n          title: `Senior ${keyword} Engineer`,\n          company: { display_name: 'Innovation Labs' },\n          location: { display_name: location || 'New York' },\n          description: `Lead ${keyword} projects in a dynamic environment.`,\n          redirect_url: '#',\n          salary_min: 80000,\n          salary_max: 120000\n        },\n        {\n          id: '3',\n          title: `${keyword} Specialist`,\n          company: { display_name: 'Global Solutions' },\n          location: { display_name: location || 'San Francisco' },\n          description: `Join our team as a ${keyword} specialist with growth opportunities.`,\n          redirect_url: '#',\n          salary_min: 70000,\n          salary_max: 100000\n        }\n      ];\n\n      setJobs(mockJobs); // Use response.data.results for real API\n    } catch (error) {\n      setError('Failed to fetch jobs. Please try again.');\n      console.error('API Error:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <form className=\"search-form\" onSubmit={handleSubmit}>\n      <div className=\"form-group\">\n        <input\n          type=\"text\"\n          placeholder=\"Job title, keywords...\"\n          value={keyword}\n          onChange={(e) => setKeyword(e.target.value)}\n          className=\"search-input\"\n        />\n      </div>\n      \n      <div className=\"form-group\">\n        <input\n          type=\"text\"\n          placeholder=\"City, state...\"\n          value={location}\n          onChange={(e) => setLocation(e.target.value)}\n          className=\"search-input\"\n        />\n      </div>\n      \n      <button type=\"submit\" className=\"search-button\">\n        üîç Search Jobs\n      </button>\n    </form>\n  );\n};\n\nexport default SearchForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}